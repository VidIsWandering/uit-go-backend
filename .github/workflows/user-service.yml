name: User Service CI/CD

on:
  push:
    branches: [main]
    paths:
      - "user-service/**"
      - ".github/workflows/user-service.yml"
  pull_request:
    branches: [main]
    paths:
      - "user-service/**"

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Build and unit test
        working-directory: ./user-service
        run: mvn -B verify
        env:
          SPRING_PROFILES_ACTIVE: test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test_db
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test

      - name: Wait for Postgres to be healthy
        run: |
          echo "Waiting for postgres to accept connections..."
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U test >/dev/null 2>&1; then
              echo "Postgres is ready";
              break
            fi
            echo "Still waiting..."; sleep 2;
          done

      - name: Run Flyway migrations (dedicated step)
        working-directory: ./user-service
        run: mvn -B -DskipTests=false -Dspring.profiles.active=test flyway:migrate
        env:
          SPRING_PROFILES_ACTIVE: test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test_db
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test

      - name: Integration test with TestContainers
        working-directory: ./user-service
        run: mvn -B failsafe:integration-test
        env:
          SPRING_PROFILES_ACTIVE: test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test_db
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test

      - name: Wait for Postgres
        if: always()
        run: |
          echo "Waiting for postgres to accept connections..."
          for i in {1..30}; do
            if timeout 1 bash -c "cat < /dev/tcp/localhost/5432" >/dev/null 2>&1; then
              echo "Postgres is listening";
              break
            fi
            echo "Still waiting..."; sleep 2;
          done

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            **/target/surefire-reports/
            **/target/failsafe-reports/

  build-push:
    name: Build and Push Docker Image
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./user-service
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/user-service:latest
            ghcr.io/${{ github.repository }}/user-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
